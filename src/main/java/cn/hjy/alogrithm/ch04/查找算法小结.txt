顺序查找、二分查找、行列递增的矩阵查找、分块查找


深度优先查找、广度优先查找、二叉树查找

顺序查找不需要数列本身有序，但是查找起来性能太差，平均AVL为（1+n）/2,时间复杂度为O(n)
二分查找本身需要待查数列有序，如果无序，则一般会使用排序算法进行排序，而大多数时候，数据都是很少变化的，
在数据准备好的时候会进行一次排序操作
在之后的查找中就可以使用二分查找了，二分查找的平均时间复杂度为O(logn),性能很好
行列递增的矩阵查找已经脱离了基础的查找范畴，行列递增的矩阵有着特别的数据存放方式，根据这个查找可以促使
我们想尽一切办法来减少检索次数
分块查找其实是对顺序查找和二分查找的一个改进，同样是扩展思路来想办法减少查询次数和优化查找算法


搜索引擎主要是依据索引来检索数据
索引分为倒排索引和正排索引，我们一般用到的都是倒排索引

倒排索引英文是Inverted Index，如有一个文档列表，每个文档都会有一个唯一的ID,我们会以这个ID为索引去获取文档的具体信息
但是一般我们在查找一个文档的时候并不知道其ID是什么，只直到大概想要搜索什么内容，所以我们输入一些关键字，和搜索引擎一样进行搜索

这是，我们把文档中的关键字作为索引，而不是ID,比如标记“中国”这个词在哪些文档中出现过，给这些关键字做索引，可能通过“中国”这个词获取了1,5,11,24这几个文档的ID
再根据ID去获取文档，或者直接跟锯关键字获取文档